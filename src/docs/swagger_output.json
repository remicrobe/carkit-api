{
  "swagger": "2.0",
  "info": {
    "title": "CarKit API Documentation",
    "version": "0.0.1"
  },
  "host": [
    "carkit.lazyy.fr"
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all information of the connected user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "desc": "fullUser"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          }
        }
      }
    },
    "/user/": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete an User.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "User bien supprimé"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Register a new user.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User registration data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "user@example.com"
                },
                "password": {
                  "example": "Password123"
                },
                "image": {
                  "example": "base64ImageString"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user details.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User update data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "new@example.com"
                },
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "password": {
                  "example": "newPass"
                },
                "username": {
                  "example": "johndoe"
                },
                "image": {
                  "example": "base64ImageString"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "User not found."
              }
            }
          },
          "422": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 422,
                "msg": "Required fields missing."
              }
            }
          }
        }
      }
    },
    "/user/image": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete user image.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "User not found."
              }
            }
          },
          "422": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 422,
                "msg": "Required fields missing."
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "User login.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User login data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "user@example.com"
                },
                "password": {
                  "example": "Password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          }
        }
      }
    },
    "/user/refresh-token/{refreshToken}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Refresh user token.",
        "parameters": [
          {
            "in": "path",
            "name": "refreshToken",
            "required": true,
            "description": "Path parameter refreshToken",
            "schema": {
              "type": "string",
              "example": "yourRefreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Aucun token valide trouvé."
              }
            }
          }
        }
      }
    },
    "/status/": {
      "get": {
        "tags": [
          "Status"
        ],
        "description": "Return \"i'm up\".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": "I'm up !"
              }
            }
          }
        }
      }
    },
    "/spending/{carId}": {
      "post": {
        "tags": [
          "Spending"
        ],
        "description": "Add a new spending entry for a car.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Spending entry data",
            "schema": {
              "type": "object",
              "properties": {
                "cost": {
                  "example": 150.75
                },
                "date": {
                  "example": "2023-01-01"
                },
                "type": {
                  "example": "insurance"
                },
                "name": {
                  "example": "Annual insurance"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "cost": 150.75,
                "date": "2023-01-01",
                "type": "insurance",
                "name": "Annual insurance"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Spending"
        ],
        "description": "Get all spending entries for a car.",
        "parameters": [
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "cost": 150.75,
                  "date": "2023-01-01",
                  "type": "insurance",
                  "name": "Annual insurance"
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      }
    },
    "/spending/{id}": {
      "delete": {
        "tags": [
          "Spending"
        ],
        "description": "Delete a spending entry.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Spending entry deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Spending entry not found."
              }
            }
          }
        }
      }
    },
    "/service/{partId}": {
      "post": {
        "tags": [
          "Service"
        ],
        "description": "Create a new service entry for a part.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Service creation data",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "example": "2023-01-01"
                },
                "mileage": {
                  "example": 15000
                }
              }
            }
          },
          {
            "in": "path",
            "name": "partId",
            "required": true,
            "description": "Path parameter partId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "date": "2023-01-01",
                "mileage": 15000
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Part not found."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Service"
        ],
        "description": "Get all service entries for a part.",
        "parameters": [
          {
            "in": "path",
            "name": "partId",
            "required": true,
            "description": "Path parameter partId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "date": "2023-01-01",
                  "mileage": 15000
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Part not found."
              }
            }
          }
        }
      }
    },
    "/service/{id}": {
      "put": {
        "tags": [
          "Service"
        ],
        "description": "Update a service entry.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Service update data",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "example": "2023-02-01"
                },
                "mileage": {
                  "example": 16000
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "date": "2023-02-01",
                "mileage": 16000
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Service not found."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "description": "Delete a service entry.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Service deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Service not found."
              }
            }
          }
        }
      }
    },
    "/part/{carId}": {
      "post": {
        "tags": [
          "Part"
        ],
        "description": "Create a new custom part for a car.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Part creation data",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Brakes"
                },
                "status": {
                  "example": "enable"
                },
                "advicedRevision": {
                  "example": "Check every 20,000 km"
                },
                "isCustom": {
                  "example": true
                }
              }
            }
          },
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "name": "Brakes",
                "status": "enable",
                "advicedRevision": "Check every 20,000 km",
                "isCustom": true
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Part"
        ],
        "description": "Get all parts for a car.",
        "parameters": [
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "name": "Brakes",
                  "status": "enable",
                  "advicedRevision": "Check every 20,000 km",
                  "isCustom": true
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      }
    },
    "/part/{id}": {
      "put": {
        "tags": [
          "Part"
        ],
        "description": "Update a custom part.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Part update data",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Updated Brakes"
                },
                "status": {
                  "example": "disabled"
                },
                "advicedRevision": {
                  "example": "Check every 15,000 km"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "name": "Updated Brakes",
                "status": "disabled",
                "advicedRevision": "Check every 15,000 km",
                "isCustom": true
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Part not found."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Part"
        ],
        "description": "Delete a custom part.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Part deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Part not found."
              }
            }
          }
        }
      }
    },
    "/mileage/{carId}": {
      "post": {
        "tags": [
          "Mileage"
        ],
        "description": "Add a new mileage entry for a car.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Mileage entry data",
            "schema": {
              "type": "object",
              "properties": {
                "mileage": {
                  "example": 15000
                },
                "date": {
                  "example": "2023-01-01"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "mileage": 15000,
                "date": "2023-01-01"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Mileage"
        ],
        "description": "Get all mileage entries for a car.",
        "parameters": [
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "mileage": 15000,
                  "date": "2023-01-01"
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      }
    },
    "/mileage/{id}": {
      "delete": {
        "tags": [
          "Mileage"
        ],
        "description": "Delete a mileage entry.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Mileage entry deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Mileage entry not found."
              }
            }
          }
        }
      }
    },
    "/full-tank/{carId}": {
      "post": {
        "tags": [
          "FullTank"
        ],
        "description": "Add a new full tank entry for a car.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Full tank entry data",
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "example": 50
                },
                "unit": {
                  "example": "liter"
                },
                "cost": {
                  "example": 80.5
                },
                "mileage": {
                  "example": 15000
                },
                "date": {
                  "example": "2023-01-01"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "quantity": 50,
                "unit": "liter",
                "cost": 80.5,
                "mileage": 15000,
                "date": "2023-01-01"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "FullTank"
        ],
        "description": "Get all full tank entries for a car.",
        "parameters": [
          {
            "in": "path",
            "name": "carId",
            "required": true,
            "description": "Path parameter carId",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "quantity": 50,
                  "unit": "liter",
                  "cost": 80.5,
                  "mileage": 15000,
                  "date": "2023-01-01"
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      }
    },
    "/full-tank/{id}": {
      "delete": {
        "tags": [
          "FullTank"
        ],
        "description": "Delete a full tank entry.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Full tank entry deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Full tank entry not found."
              }
            }
          }
        }
      }
    },
    "/car": {
      "post": {
        "tags": [
          "Car"
        ],
        "description": "Create a new car.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Car creation data",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "ice"
                },
                "model": {
                  "example": "Model S"
                },
                "make": {
                  "example": "Tesla"
                },
                "name": {
                  "example": "My Tesla"
                },
                "mileageAtStart": {
                  "example": 10000
                },
                "year": {
                  "example": 2020
                },
                "imageData": {
                  "example": "base64ImageString"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "name": "My Tesla",
                "make": "Tesla",
                "model": "Model S",
                "type": "elec"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "422": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 422,
                "msg": "Required fields missing."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Get all cars for the connected user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": [
                {
                  "id": "uuid",
                  "name": "My Tesla",
                  "make": "Tesla",
                  "model": "Model S",
                  "type": "elec"
                }
              ]
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          }
        }
      }
    },
    "/car/{id}": {
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Get car details by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "name": "My Tesla",
                "make": "Tesla",
                "model": "Model S",
                "type": "elec"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Car"
        ],
        "description": "Update car details.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Car update data",
            "schema": {
              "type": "object",
              "properties": {
                "make": {
                  "example": "Tesla"
                },
                "model": {
                  "example": "Model S"
                },
                "name": {
                  "example": "My Tesla"
                },
                "mileageAtStart": {
                  "example": 10000
                },
                "year": {
                  "example": 2020
                },
                "type": {
                  "example": "elec"
                },
                "imageData": {
                  "example": "base64ImageString"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "id": "uuid",
                "name": "Updated Tesla",
                "make": "Tesla",
                "model": "Model S",
                "type": "elec"
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Car"
        ],
        "description": "Delete a car.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Path parameter id",
            "schema": {
              "type": "string",
              "example": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 200,
                "msg": "Car deleted successfully."
              }
            }
          },
          "401": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 401,
                "msg": "Unauthorized."
              }
            }
          },
          "404": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {
                "status": 404,
                "msg": "Car not found."
              }
            }
          }
        }
      }
    },
    "/auth/apple/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authentification avec Apple. Si \"needStepTwo\" est true, il faut afficher une page pour demander username, firstname et lastname et faire l'authentification sur une autre route avec le token renvoyé.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Informations pour identifier l'utilisateur (ex: identityToken)",
            "schema": {
              "type": "object",
              "properties": {
                "identityToken": {
                  "example": "identityToken"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          }
        }
      }
    },
    "/auth/google/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authentification avec Google. Si \"needStepTwo\" est true, il faut afficher une page pour demander username, firstname et lastname et faire l'authentification sur une autre route avec le token renvoyé.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Informations pour identifier l'utilisateur (ex: identityToken)",
            "schema": {
              "type": "object",
              "properties": {
                "identityToken": {
                  "example": "identityToken"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "string",
              "example": {}
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format **Bearer <token>**"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "MileageEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "mileage": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updateAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "car": {
          "type": "string"
        },
        "carId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "mileage",
        "date",
        "createdAt",
        "updateAt",
        "deletedAt",
        "car",
        "carId"
      ]
    },
    "FullTankEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "cost": {
          "type": "string"
        },
        "mileage": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deleteAt": {
          "type": "string"
        },
        "car": {
          "type": "string"
        },
        "carId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "quantity",
        "unit",
        "cost",
        "mileage",
        "date",
        "createdAt",
        "updatedAt",
        "deleteAt",
        "car",
        "carId"
      ]
    },
    "Part": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "advicedRevision": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "car": {
          "type": "string"
        },
        "carId": {
          "type": "string"
        },
        "services": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "advicedRevision",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "car",
        "carId",
        "services"
      ]
    },
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "mileage": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "part": {
          "type": "string"
        },
        "partId": {
          "type": "string"
        },
        "spending": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "date",
        "mileage",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "part",
        "partId",
        "spending"
      ]
    },
    "SpendingEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cost": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deleteAt": {
          "type": "string"
        },
        "car": {
          "type": "string"
        },
        "carId": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "cost",
        "date",
        "type",
        "createdAt",
        "updatedAt",
        "deleteAt",
        "car",
        "carId",
        "service",
        "serviceId"
      ]
    },
    "Car": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fabricant": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "imageLink": {
          "type": "string"
        },
        "mileageAtStart": {
          "type": "string"
        },
        "year": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "mileages": {
          "type": "string"
        },
        "fullTanks": {
          "type": "string"
        },
        "spendings": {
          "type": "string"
        },
        "parts": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "fabricant",
        "model",
        "imageLink",
        "mileageAtStart",
        "year",
        "type",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "mileages",
        "fullTanks",
        "spendings",
        "parts",
        "user"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "isGuest": {
          "type": "string"
        },
        "imageLink": {
          "type": "string"
        },
        "isDeleted": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "isAnonymise": {
          "type": "string"
        },
        "cars": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "email",
        "password",
        "createdAt",
        "provider",
        "isGuest",
        "imageLink",
        "isDeleted",
        "deletedAt",
        "isAnonymise",
        "cars"
      ]
    }
  }
}
{
  "swagger": "2.0",
  "info": {
    "title": "carkit API",
    "description": "API for carkit",
    "version": "1.0.0"
  },
  "host": [
    "theodev.myftp.org:86"
  ],
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format **Bearer &lt;token&gt;**"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/apple/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authentification avec apple voir la réponse, si needStepTwo = true dans ce cas tu affiches une page pour demander username firstname et lastname et tu fais apple a l",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "identityToken": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful authentication",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/auth/google/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authentification avec google voir la réponse, si needStepTwo = true dans ce cas tu affiches une page pour demander username firstname et lastname et tu fais apple a l",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "identityToken": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful authentication",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/car/": {
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Get all cars of the connected user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cars retrieved successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Car"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "Car"
        ],
        "description": "Create a new car.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Car data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car created successfully.",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable entity. Required fields missing.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/car/image/{carId}": {
      "post": {
        "tags": [
          "Car"
        ],
        "description": "Add images to a car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Images data",
            "required": true,
            "schema": {
              "type": "array",
              "example": [
                "base64Image"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Images added successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/car/image/{carId}/{imageId}": {
      "delete": {
        "tags": [
          "Car"
        ],
        "description": "Delete an image from a car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Image ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "deleted"
                },
                "status": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/car/{carId}": {
      "delete": {
        "tags": [
          "Car"
        ],
        "description": "Delete a car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "deleted"
                },
                "status": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "put": {
        "tags": [
          "Car"
        ],
        "description": "Update a car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Car update data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car updated successfully.",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Required fields missing.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all information of the connected user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete an User.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User information deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": ""
                },
                "status": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Register a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user details.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User update data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 404
                },
                "msg": {
                  "type": "string",
                  "example": "User not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/image": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete user image.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 404
                },
                "msg": {
                  "type": "string",
                  "example": "User not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "User login.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User login successful.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/refresh-token/{refreshToken}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Refresh user token.",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Refresh token"
          }
        ],
        "responses": {
          "200": {
            "description": "User token refreshed successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Aucun token valide trouvé."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/entry/{carId}": {
      "get": {
        "tags": [
          "Entry"
        ],
        "description": "Get all entries of a specific car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entries retrieved successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entry"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "Entry"
        ],
        "description": "Create a new entry for a specific car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Entry data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry created successfully.",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable entity. Required fields missing.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/entry/{carId}/{entryId}": {
      "put": {
        "tags": [
          "Entry"
        ],
        "description": "Update an entry for a specific car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Entry ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Entry update data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry updated successfully.",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Required fields missing.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 422
                },
                "msg": {
                  "type": "string",
                  "example": "Required fields missing."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Entry"
        ],
        "description": "Delete an entry for a specific car.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Car ID"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Entry ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entry deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "deleted"
                },
                "status": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No valid token provided.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "msg": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "email": {
          "type": "string",
          "example": "john.doe@gmail.com"
        },
        "imageLink": {
          "type": "string",
          "example": "https://example.com/image.jpg"
        },
        "isGuest": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "PutCar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "string"
        },
        "fabricant": {
          "type": "string",
          "example": "string"
        },
        "vin": {
          "type": "string",
          "example": "string"
        },
        "licencePlate": {
          "type": "string",
          "example": "string"
        },
        "type": {
          "type": "string",
          "example": "number"
        },
        "color": {
          "type": "string",
          "example": "string"
        },
        "model": {
          "type": "string",
          "example": "string"
        },
        "mileage": {
          "type": "string",
          "example": "number"
        },
        "year": {
          "type": "string",
          "example": "number"
        },
        "fuel": {
          "type": "string",
          "example": "number"
        },
        "unit": {
          "type": "string",
          "example": "number"
        },
        "purchasePrice": {
          "type": "string",
          "example": "number"
        },
        "purchaseDate": {
          "type": "string",
          "example": "Date"
        },
        "mileageAtPurchase": {
          "type": "string",
          "example": "number"
        },
        "archivedAt": {
          "type": "string",
          "example": "Date"
        },
        "note": {
          "type": "string",
          "example": "string"
        },
        "typeOfUse": {
          "type": "string",
          "example": "CarTypeOfUse"
        }
      }
    },
    "PostCar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "string"
        },
        "fabricant": {
          "type": "string",
          "example": "string"
        },
        "vin": {
          "type": "string",
          "example": "string"
        },
        "licencePlate": {
          "type": "string",
          "example": "string"
        },
        "type": {
          "type": "string",
          "example": "number"
        },
        "color": {
          "type": "string",
          "example": "string"
        },
        "model": {
          "type": "string",
          "example": "string"
        },
        "mileage": {
          "type": "string",
          "example": "number"
        },
        "year": {
          "type": "string",
          "example": "number"
        },
        "fuel": {
          "type": "string",
          "example": "number"
        },
        "unit": {
          "type": "string",
          "example": "number"
        },
        "purchasePrice": {
          "type": "string",
          "example": "number"
        },
        "purchaseDate": {
          "type": "string",
          "example": "Date"
        },
        "mileageAtPurchase": {
          "type": "string",
          "example": "number"
        },
        "archivedAt": {
          "type": "string",
          "example": "Date"
        },
        "note": {
          "type": "string",
          "example": "string"
        },
        "typeOfUse": {
          "type": "string",
          "example": "CarTypeOfUse"
        },
        "image": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "number"
              },
              "link": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "number"
        },
        "name": {
          "type": "string",
          "example": "string"
        },
        "fabricant": {
          "type": "string",
          "example": "string"
        },
        "licencePlate": {
          "type": "string",
          "example": "string"
        },
        "vin": {
          "type": "string",
          "example": "string"
        },
        "type": {
          "type": "string",
          "example": "number"
        },
        "color": {
          "type": "string",
          "example": "string"
        },
        "model": {
          "type": "string",
          "example": "string"
        },
        "mileage": {
          "type": "string",
          "example": "number"
        },
        "year": {
          "type": "string",
          "example": "number"
        },
        "fuel": {
          "type": "string",
          "example": "number"
        },
        "unit": {
          "type": "string",
          "example": "number"
        },
        "purchasePrice": {
          "type": "string",
          "example": "number"
        },
        "purchaseDate": {
          "type": "string",
          "example": "Date"
        },
        "mileageAtPurchase": {
          "type": "string",
          "example": "number"
        },
        "archivedAt": {
          "type": "string",
          "example": "Date"
        },
        "note": {
          "type": "string",
          "example": "string"
        },
        "typeOfUse": {
          "type": "string",
          "example": "CarTypeOfUse"
        },
        "image": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "number"
              },
              "link": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      }
    },
    "entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "number"
        },
        "type": {
          "type": "string",
          "example": "EntryType"
        },
        "part": {
          "type": "string",
          "example": "CarPart?"
        },
        "spendingType": {
          "type": "string",
          "example": "SpendingType?"
        },
        "price": {
          "type": "string",
          "example": "number?"
        },
        "quantity": {
          "type": "string",
          "example": "number?"
        },
        "date": {
          "type": "string",
          "example": "Date"
        },
        "mileage": {
          "type": "string",
          "example": "number?"
        },
        "notes": {
          "type": "string",
          "example": "string?"
        }
      }
    },
    "PostEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "EntryType"
        },
        "part": {
          "type": "string",
          "example": "CarPart?"
        },
        "spendingType": {
          "type": "string",
          "example": "SpendingType?"
        },
        "price": {
          "type": "string",
          "example": "number?"
        },
        "quantity": {
          "type": "string",
          "example": "number?"
        },
        "date": {
          "type": "string",
          "example": "Date"
        },
        "mileage": {
          "type": "string",
          "example": "number?"
        },
        "notes": {
          "type": "string",
          "example": "string?"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "number"
        },
        "link": {
          "type": "string",
          "example": "string"
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}